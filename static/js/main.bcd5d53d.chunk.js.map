{"version":3,"sources":["utils/api.ts","utils/preparePeople.ts","components/Loader/Loader.tsx","components/People/Person/PersonLink.tsx","components/People/Person/PersonInfo.tsx","components/People/PeopleTable/PeopleTable.tsx","components/People/People/People.tsx","components/NavigateLink/NavigateLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","preparePeople","people","map","person","findMother","find","mother","motherName","name","findFather","father","fatherName","personCopy","Loader","className","Personlink","sex","slug","to","replace","classNames","PersonInfo","born","died","PeopleTable","useParams","isSelected","People","useState","setPeople","isLoad","setIsLoad","isError","setIsError","fetchPeople","responce","useEffect","isEmptyPeople","length","NavigateLink","title","path","isActive","NavBar","role","App","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bcd5d53d.chunk.js","sourcesContent":["import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const preparePeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    const findMother = people.find(mother => person.motherName === mother.name);\n    const findFather = people.find(father => person.fatherName === father.name);\n    const personCopy = { ...person };\n\n    personCopy.mother = findMother;\n    personCopy.father = findFather;\n\n    return personCopy;\n  });\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\nexport const Personlink: FC<Pick<Person, 'name' | 'sex' | 'slug'>> = ({\n  name,\n  sex,\n  slug,\n}) => (\n  <NavLink\n    to={`/people/${slug}`}\n    replace\n    className={classNames({ 'has-text-danger': sex === 'f' })}\n  >\n    {name}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { Person } from '../../../types';\nimport { Personlink } from './PersonLink';\n\nexport const PersonInfo: FC<Person> = ({\n  name,\n  slug,\n  sex,\n  born,\n  died,\n  motherName,\n  fatherName,\n  mother,\n  father,\n}) => (\n  <>\n    <td><Personlink name={name} sex={sex} slug={slug} /></td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>\n      {mother ? (\n        <Personlink\n          name={mother.name}\n          sex={mother.sex}\n          slug={mother.slug}\n        />\n      ) : motherName || '-'}\n    </td>\n    <td>\n      {father ? (\n        <Personlink\n          name={father.name}\n          sex={father.sex}\n          slug={father.slug}\n        />\n      ) : fatherName || '-'}\n    </td>\n  </>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../../types';\nimport { PersonInfo } from '../Person/PersonInfo';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const isSelected = slug === person.slug;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.name}\n              className={classNames({\n                'has-background-warning': isSelected,\n              })}\n            >\n              <PersonInfo {...person} />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../../types';\nimport { getPeople } from '../../../utils/api';\nimport { preparePeople } from '../../../utils/preparePeople';\nimport { Loader } from '../../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchPeople = async () => {\n    try {\n      setIsError(false);\n      setIsLoad(true);\n      const responce = await getPeople();\n\n      setPeople(preparePeople(responce));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const isEmptyPeople = !people.length && !isLoad && !isError;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoad && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {isEmptyPeople && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!!people.length && (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  title: string,\n  path: string,\n};\n\nexport const NavigateLink: FC<Props> = ({ title, path }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={path}\n    replace\n  >\n    {title}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { NavigateLink } from '../NavigateLink/NavigateLink';\n\nexport const NavBar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigateLink title=\"Home\" path=\"/\" />\n        <NavigateLink title=\"People\" path=\"/people\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { People } from './components/People/People/People';\nimport { NavBar } from './components/NavBar/NavBar';\n\nimport './App.scss';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n          <Route\n            path=\"/people\"\n            element={(\n              <>\n                <h1 className=\"title\">People Page</h1>\n                <People />\n              </>\n            )}\n          >\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}